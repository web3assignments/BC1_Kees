{
  "contractName": "AutomaticTradeContract",
  "abi": [
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerPotatos",
          "type": "uint256"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Offers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerPotatos",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "alarm",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceOfUrl",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "GetAlarm",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerPotatos",
          "type": "uint256"
        }
      ],
      "name": "TradeOffer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerPotatos\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"ContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"GetAlarm\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Offers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerPotatos\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerPotatos\",\"type\":\"uint256\"}],\"name\":\"TradeOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"alarm\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOfUrl\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Kees/Desktop/Dapps_Github/BC1_Kees/Day_07_Mon_9_12_2019/testen/contracts/AutomaticTradeContract.sol\":\"AutomaticTradeContract\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Kees/Desktop/Dapps_Github/BC1_Kees/Day_07_Mon_9_12_2019/testen/contracts/AutomaticTradeContract.sol\":{\"keccak256\":\"0xf01108fe98ff9f671f28b3162fb7e420929f410ec994b767b4ca3f13dd1a36af\",\"urls\":[\"bzz-raw://279d11ca88015912a171da2c18faff93c8faef0e04b6d5a5a3995c725acc6b3c\",\"dweb:/ipfs/QmcyNk6eRDDfH2gHXXSZmF2UkgMDjXQCm7Za29VBTndcGr\"]},\"/C/Users/Kees/Desktop/Dapps_Github/BC1_Kees/Day_07_Mon_9_12_2019/testen/contracts/provableAPI.sol\":{\"keccak256\":\"0x952ea8932e78c193c232bf2a1e1e6751b1fc49928de147ffba209a886c0c2305\",\"urls\":[\"bzz-raw://80febd4185a17081545e40468f49fecdb48a78f5937f392bf5dda65bdb48b69c\",\"dweb:/ipfs/QmXJ9pUq4iGZTdxLaJ7jfwyPVAytwCN6Jk9NgvYagv2jaA\"]}},\"version\":1}",
  "bytecode": "0x6080604052611b7d806100136000396000f3fe6080604052600436106100865760003560e01c80633b668059116100595780633b6680591461038057806343d3b1be146103ab578063465c4161146103d6578063bb7e8c28146103e0578063cd300bc01461047057610086565b80630ffbb5381461008857806327dc297e146100f45780632d339b1e146101c657806338bbfa5014610217575b005b34801561009457600080fd5b506100d7600480360360208110156100ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104b5565b604051808381526020018281526020019250505060405180910390f35b34801561010057600080fd5b506101c46004803603604081101561011757600080fd5b81019080803590602001909291908035906020019064010000000081111561013e57600080fd5b82018360208201111561015057600080fd5b8035906020019184600183028401116401000000008311171561017257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104d9565b005b3480156101d257600080fd5b50610215600480360360208110156101e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610533565b005b34801561022357600080fd5b5061037e6004803603606081101561023a57600080fd5b81019080803590602001909291908035906020019064010000000081111561026157600080fd5b82018360208201111561027357600080fd5b8035906020019184600183028401116401000000008311171561029557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102f857600080fd5b82018360208201111561030a57600080fd5b8035906020019184600183028401116401000000008311171561032c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061057e565b005b34801561038c57600080fd5b506103956105a1565b6040518082815260200191505060405180910390f35b3480156103b757600080fd5b506103c06105d9565b6040518082815260200191505060405180910390f35b6103de6105df565b005b3480156103ec57600080fd5b506103f56106ef565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561043557808201518184015260208101905061041a565b50505050905090810190601f1680156104625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561047c57600080fd5b506104b36004803603604081101561049357600080fd5b81019080803590602001909291908035906020019092919050505061078d565b005b60076020528060005260406000206000915090508060000154908060010154905082565b6104e1610897565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051857600080fd5b806005908051906020019061052e929190611a18565b505050565b8073ffffffffffffffffffffffffffffffffffffffff166108fc60059081150290604051600060405180830381858888f1935050505015801561057a573d6000803e3d6000fd5b5050565b6000801b600360008060001b815260200190815260200160002081905550505050565b6000806105ac6105a1565b9050600081116105bb57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff163191505090565b60065481565b61061d6040518060400160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250610bb4565b6006819055506006543073ffffffffffffffffffffffffffffffffffffffff16311015610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611abe602e913960400191505060405180910390fd5b6106ec6040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506040518060800160405280605d8152602001611aec605d9139610f45565b50565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107855780601f1061075a57610100808354040283529160200191610785565b820191906000526020600020905b81548152906001019060200180831161076857829003601f168201915b505050505081565b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507fc72c11333761a47423f2cbe54eda92b59b0b5977a444194492fe47f41b3c0ab4828260405180806020018481526020018381526020018281038252600f8152602001807f54726164652061677265656d616e740000000000000000000000000000000000815250602001935050505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061091f5750600061091d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661148b565b145b156109305761092e6000611496565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561099a57600080fd5b505af11580156109ae573d6000803e3d6000fd5b505050506040513d60208110156109c457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b0d57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a9257600080fd5b505af1158015610aa6573d6000803e3d6000fd5b505050506040513d6020811015610abc57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7457600080fd5b505afa158015610b88573d6000803e3d6000fd5b505050506040513d6020811015610b9e57600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610c3c57506000610c3a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661148b565b145b15610c4d57610c4b6000611496565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610cb757600080fd5b505af1158015610ccb573d6000803e3d6000fd5b505050506040513d6020811015610ce157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e2a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610daf57600080fd5b505af1158015610dc3573d6000803e3d6000fd5b505050506040513d6020811015610dd957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610eb7578082015181840152602081019050610e9c565b50505050905090810190601f168015610ee45780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610f0357600080fd5b505af1158015610f17573d6000803e3d6000fd5b505050506040513d6020811015610f2d57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610fcd57506000610fcb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661148b565b145b15610fde57610fdc6000611496565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561104857600080fd5b505af115801561105c573d6000803e3d6000fd5b505050506040513d602081101561107257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111bb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561114057600080fd5b505af1158015611154573d6000803e3d6000fd5b505050506040513d602081101561116a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561124a57808201518184015260208101905061122f565b50505050905090810190601f1680156112775780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561129657600080fd5b505af11580156112aa573d6000803e3d6000fd5b505050506040513d60208110156112c057600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156112f6576000801b915050611485565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611391578082015181840152602081019050611376565b50505050905090810190601f1680156113be5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156113f75780820151818401526020810190506113dc565b50505050905090810190601f1680156114245780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561144557600080fd5b505af1158015611459573d6000803e3d6000fd5b50505050506040513d602081101561147057600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b60006114a06114a7565b9050919050565b6000806114c7731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61148b565b111561156957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115606040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506119fe565b600190506119fb565b600061158873c03a2615d5efaf5f49f60b7bb6583eaec212fdf161148b565b111561162a5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116216040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506119fe565b600190506119fb565b600061164973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61148b565b11156116eb5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116e26040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506119fe565b600190506119fb565b600061170a73146500cfd35b22e4a392fe0adc06de1a1368ed4861148b565b11156117ac5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117a36040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506119fe565b600190506119fb565b60006117cb73a2998efd205fb9d4b4963afb70778d6354ad3a4161148b565b111561186d5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118646040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506119fe565b600190506119fb565b600061188c736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561148b565b11156118f057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119fb565b600061190f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61148b565b1115611973577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119fb565b60006119927351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61148b565b11156119f6577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119fb565b600090505b90565b8060029080519060200190611a14929190611a18565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a5957805160ff1916838001178555611a87565b82800160010185558215611a87579182015b82811115611a86578251825591602001919060010190611a6b565b5b509050611a949190611a98565b5090565b611aba91905b80821115611ab6576000816000905550600101611a9e565b5090565b9056fe706c656173652061646420736f6d652045544820746f20636f76657220666f7220746865207175657279206665656a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d64656d6f266c6f63617469653d416d7374657264616d292e6c697665776565725b305d2e616c61726da265627a7a723158201bd1d142bb0d7dd29694ca11576384f21e8523487cccf97cd71980d79f68bedf64736f6c634300050c0032",
  "deployedBytecode": "",
  "sourceMap": "59:1373:0:-;;;;;;;;;",
  "deployedSourceMap": "59:1373:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;854:44:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;854:44:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;209:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;209:153:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;209:153:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;209:153:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;209:153:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;209:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;209:153:0;;;;;;;;;;;;;;;:::i;:::-;;1350:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1350:79:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1350:79:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;15850:181:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15850:181:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15850:181:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15850:181:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15850:181:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15850:181:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15850:181:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15850:181:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15850:181:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15850:181:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15850:181:2;;;;;;;;;;;;;;;:::i;:::-;;1173:169:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1173:169:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;140:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;140:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;369:349;;;:::i;:::-;;114:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;114:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;114:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;950:215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;950:215:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;950:215:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;854:44;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;209:153::-;301:20;:18;:20::i;:::-;287:34;;:10;:34;;;283:48;;323:8;;;283:48;349:6;341:5;:14;;;;;;;;;;;;:::i;:::-;;209:153;;:::o;1350:79::-;1405:2;:11;;:18;1417:5;1405:18;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1405:18:0;1350:79;:::o;15850:181:2:-;16021:1;16013:10;;15976:22;:34;16007:1;15999:10;;15976:34;;;;;;;;;;;:47;;;;15850:181;;;:::o;1173:169:0:-;1221:4;1237:12;1252:17;:15;:17::i;:::-;1237:32;;1297:1;1287:7;:11;1278:21;;;;;;1323:4;1315:21;;;1308:28;;;1173:169;:::o;140:25::-;;;;:::o;369:349::-;427:24;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;414:10;:37;;;;495:10;;478:4;470:21;;;:35;;461:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;579:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:132::i;:::-;;369:349::o;114:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;950:215::-;1044:6;1016;:18;1023:10;1016:18;;;;;;;;;;;;;;;:25;;:34;;;;1091:12;1057:6;:18;1064:10;1057:18;;;;;;;;;;;;;;;:31;;:46;;;;1115:44;1138:6;1146:12;1115:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;950:215;;:::o;38056:132:2:-;38116:24;12187:1;12163:26;;12171:3;;;;;;;;;;;12163:26;;;12162:64;;;;12224:1;12195:25;12215:3;;;;;;;;;;;12195:11;:25::i;:::-;:30;12162:64;12158:132;;;12243:35;11809:1;12243:19;:35::i;:::-;;12158:132;12325:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12325:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12325:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12325:16:2;;;;;;;;;;;;;;;;12304:37;;12312:8;;;;;;;;;;;12304:37;;;12300:108;;12379:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12379:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12379:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12379:16:2;;;;;;;;;;;;;;;;12358:8;;:38;;;;;;;;;;;;;;;;;;12300:108;38160:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38160:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38160:20:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38160:20:2;;;;;;;;;;;;;;;;38153:27;;38056:132;:::o;16039:158::-;16123:16;12187:1;12163:26;;12171:3;;;;;;;;;;;12163:26;;;12162:64;;;;12224:1;12195:25;12215:3;;;;;;;;;;;12195:11;:25::i;:::-;:30;12162:64;12158:132;;;12243:35;11809:1;12243:19;:35::i;:::-;;12158:132;12325:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12325:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12325:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12325:16:2;;;;;;;;;;;;;;;;12304:37;;12312:8;;;;;;;;;;;12304:37;;;12300:108;;12379:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12379:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12379:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12379:16:2;;;;;;;;;;;;;;;;12358:8;;:38;;;;;;;;;;;;;;;;;;12300:108;16159:8;;;;;;;;;;;:17;;;16177:11;16159:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16159:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16159:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16159:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16159:30:2;;;;;;;;;;;;;;;;16152:37;;16039:158;;;:::o;16398:359::-;16499:11;12187:1;12163:26;;12171:3;;;;;;;;;;;12163:26;;;12162:64;;;;12224:1;12195:25;12215:3;;;;;;;;;;;12195:11;:25::i;:::-;:30;12162:64;12158:132;;;12243:35;11809:1;12243:19;:35::i;:::-;;12158:132;12325:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12325:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12325:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12325:16:2;;;;;;;;;;;;;;;;12304:37;;12312:8;;;;;;;;;;;12304:37;;;12300:108;;12379:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12379:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12379:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12379:16:2;;;;;;;;;;;;;;;;12358:8;;:38;;;;;;;;;;;;;;;;;;12300:108;16523:10;16536:8;;;;;;;;;;;:17;;;16554:11;16536:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16536:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16536:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16536:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16536:30:2;;;;;;;;;;;;;;;;16523:43;;16613:6;16599:11;:20;16589:7;:30;16581:5;:38;16577:106;;;16643:1;16636:8;;;;;;;16577:106;16700:8;;;;;;;;;;;:14;;;16721:5;16728:1;16731:11;16744:4;16700:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16700:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16700:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16700:49:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16700:49:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16700:49:2;;;;;;;;;;;;;;;;16693:56;;;12418:1;16398:359;;;;:::o;38196:151::-;38255:10;38323:5;38311:18;38302:27;;38287:53;;;:::o;12912:208::-;12977:16;13091:21;:19;:21::i;:::-;13084:28;;12912:208;;;:::o;13404:2070::-;13453:16;13544:1;13486:55;13498:42;13486:11;:55::i;:::-;:59;13482:250;;;13598:42;13572:3;;:69;;;;;;;;;;;;;;;;;;13656:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13716:4;13709:11;;;;13482:250;13804:1;13746:55;13758:42;13746:11;:55::i;:::-;:59;13742:259;;;13866:42;13840:3;;:69;;;;;;;;;;;;;;;;;;13924:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13985:4;13978:11;;;;13742:259;14073:1;14015:55;14027:42;14015:11;:55::i;:::-;:59;14011:254;;;14133:42;14107:3;;:69;;;;;;;;;;;;;;;;;;14191:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14249:4;14242:11;;;;14011:254;14337:1;14279:55;14291:42;14279:11;:55::i;:::-;:59;14275:258;;;14399:42;14373:3;;:69;;;;;;;;;;;;;;;;;;14457:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14517:4;14510:11;;;;14275:258;14605:1;14547:55;14559:42;14547:11;:55::i;:::-;:59;14543:256;;;14666:42;14640:3;;:69;;;;;;;;;;;;;;;;;;14724:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14783:4;14776:11;;;;14543:256;14871:1;14813:55;14825:42;14813:11;:55::i;:::-;:59;14809:205;;;14933:42;14907:3;;:69;;;;;;;;;;;;;;;;;;14998:4;14991:11;;;;14809:205;15086:1;15028:55;15040:42;15028:11;:55::i;:::-;:59;15024:204;;;15147:42;15121:3;;:69;;;;;;;;;;;;;;;;;;15212:4;15205:11;;;;15024:204;15300:1;15242:55;15254:42;15242:11;:55::i;:::-;:59;15238:206;;;15363:42;15337:3;;:69;;;;;;;;;;;;;;;;;;15428:4;15421:11;;;;15238:206;15461:5;15454:12;;13404:2070;;:::o;13128:127::-;13234:13;13210:21;:37;;;;;;;;;;;;:::i;:::-;;13128:127;:::o;59:1373:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.12;\r\n\r\nimport \"./provableAPI.sol\";\r\n\r\ncontract AutomaticTradeContract is usingProvable {\r\n   string  public alarm;\r\n   uint256 public priceOfUrl;\r\n   constructor() public payable {}\r\n\r\n   function __callback(bytes32 myid, string memory result ) public {\r\n       if (msg.sender != provable_cbAddress()) revert();\r\n       alarm = result;\r\n   }\r\n\r\n   function GetAlarm() public payable {\r\n       priceOfUrl = provable_getPrice(\"URL\");\r\n       require (address(this).balance >= priceOfUrl,\r\n            \"please add some ETH to cover for the query fee\");\r\n       provable_query(\"URL\", \r\n            \"json(http://weerlive.nl/api/json-data-10min.php?key=demo&locatie=Amsterdam).liveweer[0].alarm\");\r\n   }\r\n\r\n\r\n  \r\n  event Log(string message, uint amount, uint offerPotatos);\r\n  \r\n  struct OfferInfo {uint amount; uint offerPotatos;}\r\n  \r\n  mapping (address => OfferInfo) public Offers;\r\n  \r\n  function () external payable {\r\n  }\r\n  \r\n  function TradeOffer(uint amount, uint offerPotatos) public {\r\n    Offers[msg.sender].amount = amount;\r\n    Offers[msg.sender].offerPotatos = offerPotatos;\r\n    emit Log(\"Trade agreemant\", amount, offerPotatos);\r\n  }\r\n  \r\n  function ContractBalance() public view returns (uint) { \r\n      uint balance = ContractBalance();\r\n      require (balance > 0);\r\n      return address(this).balance;\r\n  }\r\n  \r\n  function Transfer(address payable to) public { \r\n      to.transfer(5 wei);\r\n  }\r\n}\r\n",
  "sourcePath": "C:/Users/Kees/Desktop/Dapps_Github/BC1_Kees/Day_07_Mon_9_12_2019/testen/contracts/AutomaticTradeContract.sol",
  "ast": {
    "absolutePath": "/C/Users/Kees/Desktop/Dapps_Github/BC1_Kees/Day_07_Mon_9_12_2019/testen/contracts/AutomaticTradeContract.sol",
    "exportedSymbols": {
      "AutomaticTradeContract": [
        144
      ]
    },
    "id": 145,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/Kees/Desktop/Dapps_Github/BC1_Kees/Day_07_Mon_9_12_2019/testen/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 6498,
        "src": "28:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6497,
              "src": "94:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6497",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "94:13:0"
          }
        ],
        "contractDependencies": [
          6497
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 144,
        "linearizedBaseContracts": [
          144,
          6497
        ],
        "name": "AutomaticTradeContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "alarm",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "114:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "114:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "priceOfUrl",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "140:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "140:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "200:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 12,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:0:0"
            },
            "scope": 144,
            "src": "171:31:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "273:89:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6512,
                        "src": "287:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "287:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21,
                        "name": "provable_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4320,
                        "src": "301:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "301:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "287:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 27,
                  "nodeType": "IfStatement",
                  "src": "283:48:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6517,
                          6518
                        ],
                        "referencedDeclaration": 6517,
                        "src": "323:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "323:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 26,
                    "nodeType": "ExpressionStatement",
                    "src": "323:8:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "alarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "341:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "349:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "341:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "341:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "229:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "243:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:37:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:0:0"
            },
            "scope": 144,
            "src": "209:153:0",
            "stateMutability": "nonpayable",
            "superFunction": 1224,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "404:314:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "priceOfUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "414:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "445:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 37,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1265,
                          1283
                        ],
                        "referencedDeclaration": 1265,
                        "src": "427:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "427:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "414:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "414:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 44,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6538,
                                "src": "478:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutomaticTradeContract_$144",
                                  "typeString": "contract AutomaticTradeContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutomaticTradeContract_$144",
                                  "typeString": "contract AutomaticTradeContract"
                                }
                              ],
                              "id": 43,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "470:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "470:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "470:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "priceOfUrl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "495:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "470:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "520:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        },
                        "value": "please add some ETH to cover for the query fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6515,
                        6516
                      ],
                      "referencedDeclaration": 6516,
                      "src": "461:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "461:108:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "594:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d64656d6f266c6f63617469653d416d7374657264616d292e6c697665776565725b305d2e616c61726d",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "615:95:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ece18210cc41ea8ef89aab64ff30a21e9b8ffe45f27ae7f7796fe67857efe38e",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=demo&locatie=Amsterdam).liveweer[0].alarm\""
                        },
                        "value": "json(http://weerlive.nl/api/json-data-10min.php?key=demo&locatie=Amsterdam).liveweer[0].alarm"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ece18210cc41ea8ef89aab64ff30a21e9b8ffe45f27ae7f7796fe67857efe38e",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=demo&locatie=Amsterdam).liveweer[0].alarm\""
                        }
                      ],
                      "id": 52,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1324,
                        1367,
                        1414,
                        1459,
                        1503,
                        1549,
                        1599,
                        1647,
                        1695,
                        1745,
                        1799,
                        1851,
                        1888,
                        1928,
                        1971,
                        2011,
                        2056,
                        2104,
                        2155,
                        2203,
                        2256,
                        2312,
                        2371,
                        2427,
                        2488,
                        2552,
                        2619,
                        2683,
                        2752,
                        2824,
                        2899,
                        2971,
                        3019,
                        3069,
                        3123,
                        3175,
                        3212,
                        3252,
                        3295,
                        3335,
                        3380,
                        3428,
                        3479,
                        3527,
                        3580,
                        3636,
                        3695,
                        3751,
                        3812,
                        3876,
                        3943,
                        4007,
                        4076,
                        4148,
                        4223,
                        4295
                      ],
                      "referencedDeclaration": 1324,
                      "src": "579:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:132:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "579:132:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetAlarm",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:0"
            },
            "scope": 144,
            "src": "369:349:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 66,
            "name": "Log",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "740:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "756:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "name": "offerPotatos",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "769:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "739:48:0"
            },
            "src": "730:58:0"
          },
          {
            "canonicalName": "AutomaticTradeContract.OfferInfo",
            "id": 71,
            "members": [
              {
                "constant": false,
                "id": 68,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 71,
                "src": "814:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 67,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "814:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "name": "offerPotatos",
                "nodeType": "VariableDeclaration",
                "scope": 71,
                "src": "827:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "827:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "OfferInfo",
            "nodeType": "StructDefinition",
            "scope": 144,
            "src": "796:50:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 75,
            "name": "Offers",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "854:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferInfo_$71_storage_$",
              "typeString": "mapping(address => struct AutomaticTradeContract.OfferInfo)"
            },
            "typeName": {
              "id": 74,
              "keyType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "863:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "854:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferInfo_$71_storage_$",
                "typeString": "mapping(address => struct AutomaticTradeContract.OfferInfo)"
              },
              "valueType": {
                "contractScope": null,
                "id": 73,
                "name": "OfferInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 71,
                "src": "874:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OfferInfo_$71_storage_ptr",
                  "typeString": "struct AutomaticTradeContract.OfferInfo"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "936:6:0",
              "statements": []
            },
            "documentation": null,
            "id": 79,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "916:2:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "936:0:0"
            },
            "scope": 144,
            "src": "907:35:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1009:156:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "Offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1016:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferInfo_$71_storage_$",
                            "typeString": "mapping(address => struct AutomaticTradeContract.OfferInfo storage ref)"
                          }
                        },
                        "id": 89,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6512,
                            "src": "1023:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1023:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1016:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferInfo_$71_storage",
                          "typeString": "struct AutomaticTradeContract.OfferInfo storage ref"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "1016:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1044:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1016:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 94,
                          "name": "Offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1057:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferInfo_$71_storage_$",
                            "typeString": "mapping(address => struct AutomaticTradeContract.OfferInfo storage ref)"
                          }
                        },
                        "id": 97,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6512,
                            "src": "1064:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1064:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1057:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferInfo_$71_storage",
                          "typeString": "struct AutomaticTradeContract.OfferInfo storage ref"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerPotatos",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "1057:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "offerPotatos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1091:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1057:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:46:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "54726164652061677265656d616e74",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1119:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_819bf40720c810e15d74ca4fe72238fe097a3272b074580d7cc654294025c229",
                          "typeString": "literal_string \"Trade agreemant\""
                        },
                        "value": "Trade agreemant"
                      },
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1138:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "offerPotatos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1146:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_819bf40720c810e15d74ca4fe72238fe097a3272b074580d7cc654294025c229",
                          "typeString": "literal_string \"Trade agreemant\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1115:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "EmitStatement",
                  "src": "1110:49:0"
                }
              ]
            },
            "documentation": null,
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "TradeOffer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "970:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "offerPotatos",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "983:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "969:32:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:0"
            },
            "scope": 144,
            "src": "950:215:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1227:115:0",
              "statements": [
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
                      "src": "1237:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1237:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 116,
                      "name": "ContractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "1252:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1237:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1287:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1297:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1287:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6515,
                        6516
                      ],
                      "referencedDeclaration": 6515,
                      "src": "1278:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 126,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6538,
                          "src": "1323:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AutomaticTradeContract_$144",
                            "typeString": "contract AutomaticTradeContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_AutomaticTradeContract_$144",
                            "typeString": "contract AutomaticTradeContract"
                          }
                        ],
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1315:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1315:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1315:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1308:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1197:2:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1221:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:6:0"
            },
            "scope": 144,
            "src": "1173:169:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1395:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1417:5:0",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "1405:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1405:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1368:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1367:20:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1395:0:0"
            },
            "scope": 144,
            "src": "1350:79:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 145,
        "src": "59:1373:0"
      }
    ],
    "src": "0:1434:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Kees/Desktop/Dapps_Github/BC1_Kees/Day_07_Mon_9_12_2019/testen/contracts/AutomaticTradeContract.sol",
    "exportedSymbols": {
      "AutomaticTradeContract": [
        144
      ]
    },
    "id": 145,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/Kees/Desktop/Dapps_Github/BC1_Kees/Day_07_Mon_9_12_2019/testen/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 6498,
        "src": "28:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6497,
              "src": "94:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6497",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "94:13:0"
          }
        ],
        "contractDependencies": [
          6497
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 144,
        "linearizedBaseContracts": [
          144,
          6497
        ],
        "name": "AutomaticTradeContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "alarm",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "114:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "114:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "priceOfUrl",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "140:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "140:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "200:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 12,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:0:0"
            },
            "scope": 144,
            "src": "171:31:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "273:89:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6512,
                        "src": "287:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "287:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21,
                        "name": "provable_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4320,
                        "src": "301:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "301:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "287:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 27,
                  "nodeType": "IfStatement",
                  "src": "283:48:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6517,
                          6518
                        ],
                        "referencedDeclaration": 6517,
                        "src": "323:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "323:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 26,
                    "nodeType": "ExpressionStatement",
                    "src": "323:8:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "alarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "341:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "349:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "341:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "341:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "229:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "243:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:37:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:0:0"
            },
            "scope": 144,
            "src": "209:153:0",
            "stateMutability": "nonpayable",
            "superFunction": 1224,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "404:314:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "priceOfUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "414:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "445:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 37,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1265,
                          1283
                        ],
                        "referencedDeclaration": 1265,
                        "src": "427:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "427:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "414:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "414:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 44,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6538,
                                "src": "478:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutomaticTradeContract_$144",
                                  "typeString": "contract AutomaticTradeContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutomaticTradeContract_$144",
                                  "typeString": "contract AutomaticTradeContract"
                                }
                              ],
                              "id": 43,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "470:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "470:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "470:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "priceOfUrl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "495:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "470:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "520:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        },
                        "value": "please add some ETH to cover for the query fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6515,
                        6516
                      ],
                      "referencedDeclaration": 6516,
                      "src": "461:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "461:108:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "594:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d64656d6f266c6f63617469653d416d7374657264616d292e6c697665776565725b305d2e616c61726d",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "615:95:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ece18210cc41ea8ef89aab64ff30a21e9b8ffe45f27ae7f7796fe67857efe38e",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=demo&locatie=Amsterdam).liveweer[0].alarm\""
                        },
                        "value": "json(http://weerlive.nl/api/json-data-10min.php?key=demo&locatie=Amsterdam).liveweer[0].alarm"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ece18210cc41ea8ef89aab64ff30a21e9b8ffe45f27ae7f7796fe67857efe38e",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=demo&locatie=Amsterdam).liveweer[0].alarm\""
                        }
                      ],
                      "id": 52,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1324,
                        1367,
                        1414,
                        1459,
                        1503,
                        1549,
                        1599,
                        1647,
                        1695,
                        1745,
                        1799,
                        1851,
                        1888,
                        1928,
                        1971,
                        2011,
                        2056,
                        2104,
                        2155,
                        2203,
                        2256,
                        2312,
                        2371,
                        2427,
                        2488,
                        2552,
                        2619,
                        2683,
                        2752,
                        2824,
                        2899,
                        2971,
                        3019,
                        3069,
                        3123,
                        3175,
                        3212,
                        3252,
                        3295,
                        3335,
                        3380,
                        3428,
                        3479,
                        3527,
                        3580,
                        3636,
                        3695,
                        3751,
                        3812,
                        3876,
                        3943,
                        4007,
                        4076,
                        4148,
                        4223,
                        4295
                      ],
                      "referencedDeclaration": 1324,
                      "src": "579:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:132:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "579:132:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetAlarm",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:0"
            },
            "scope": 144,
            "src": "369:349:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 66,
            "name": "Log",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "740:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "756:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "name": "offerPotatos",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "769:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "739:48:0"
            },
            "src": "730:58:0"
          },
          {
            "canonicalName": "AutomaticTradeContract.OfferInfo",
            "id": 71,
            "members": [
              {
                "constant": false,
                "id": 68,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 71,
                "src": "814:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 67,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "814:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "name": "offerPotatos",
                "nodeType": "VariableDeclaration",
                "scope": 71,
                "src": "827:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "827:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "OfferInfo",
            "nodeType": "StructDefinition",
            "scope": 144,
            "src": "796:50:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 75,
            "name": "Offers",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "854:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferInfo_$71_storage_$",
              "typeString": "mapping(address => struct AutomaticTradeContract.OfferInfo)"
            },
            "typeName": {
              "id": 74,
              "keyType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "863:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "854:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferInfo_$71_storage_$",
                "typeString": "mapping(address => struct AutomaticTradeContract.OfferInfo)"
              },
              "valueType": {
                "contractScope": null,
                "id": 73,
                "name": "OfferInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 71,
                "src": "874:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OfferInfo_$71_storage_ptr",
                  "typeString": "struct AutomaticTradeContract.OfferInfo"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "936:6:0",
              "statements": []
            },
            "documentation": null,
            "id": 79,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "916:2:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "936:0:0"
            },
            "scope": 144,
            "src": "907:35:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1009:156:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "Offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1016:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferInfo_$71_storage_$",
                            "typeString": "mapping(address => struct AutomaticTradeContract.OfferInfo storage ref)"
                          }
                        },
                        "id": 89,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6512,
                            "src": "1023:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1023:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1016:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferInfo_$71_storage",
                          "typeString": "struct AutomaticTradeContract.OfferInfo storage ref"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "1016:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1044:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1016:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 94,
                          "name": "Offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1057:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferInfo_$71_storage_$",
                            "typeString": "mapping(address => struct AutomaticTradeContract.OfferInfo storage ref)"
                          }
                        },
                        "id": 97,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6512,
                            "src": "1064:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1064:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1057:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferInfo_$71_storage",
                          "typeString": "struct AutomaticTradeContract.OfferInfo storage ref"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerPotatos",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "1057:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "offerPotatos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1091:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1057:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:46:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "54726164652061677265656d616e74",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1119:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_819bf40720c810e15d74ca4fe72238fe097a3272b074580d7cc654294025c229",
                          "typeString": "literal_string \"Trade agreemant\""
                        },
                        "value": "Trade agreemant"
                      },
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1138:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "offerPotatos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1146:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_819bf40720c810e15d74ca4fe72238fe097a3272b074580d7cc654294025c229",
                          "typeString": "literal_string \"Trade agreemant\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1115:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "EmitStatement",
                  "src": "1110:49:0"
                }
              ]
            },
            "documentation": null,
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "TradeOffer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "970:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "offerPotatos",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "983:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "969:32:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:0"
            },
            "scope": 144,
            "src": "950:215:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1227:115:0",
              "statements": [
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
                      "src": "1237:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1237:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 116,
                      "name": "ContractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "1252:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1237:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1287:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1297:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1287:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6515,
                        6516
                      ],
                      "referencedDeclaration": 6515,
                      "src": "1278:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 126,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6538,
                          "src": "1323:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AutomaticTradeContract_$144",
                            "typeString": "contract AutomaticTradeContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_AutomaticTradeContract_$144",
                            "typeString": "contract AutomaticTradeContract"
                          }
                        ],
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1315:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1315:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1315:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1308:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1197:2:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1221:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:6:0"
            },
            "scope": 144,
            "src": "1173:169:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1395:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1417:5:0",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "1405:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1405:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1368:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1367:20:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1395:0:0"
            },
            "scope": 144,
            "src": "1350:79:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 145,
        "src": "59:1373:0"
      }
    ],
    "src": "0:1434:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0xc72c11333761a47423f2cbe54eda92b59b0b5977a444194492fe47f41b3c0ab4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "offerPotatos",
              "type": "uint256"
            }
          ],
          "name": "Log",
          "type": "event",
          "signature": "0xc72c11333761a47423f2cbe54eda92b59b0b5977a444194492fe47f41b3c0ab4"
        }
      },
      "links": {},
      "address": "0xc5D7e461789B55b5639DeC195849C06327e2ec6D",
      "transactionHash": "0xbbea3dcd30831ee700e81614a0d571d50fa4f508092d284c6384ca9c3742e764"
    },
    "5777": {
      "events": {
        "0xc72c11333761a47423f2cbe54eda92b59b0b5977a444194492fe47f41b3c0ab4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "offerPotatos",
              "type": "uint256"
            }
          ],
          "name": "Log",
          "type": "event",
          "signature": "0xc72c11333761a47423f2cbe54eda92b59b0b5977a444194492fe47f41b3c0ab4"
        }
      },
      "links": {},
      "address": "0xD321800B49AA2b941b7BFAD2387459b0F5887C59",
      "transactionHash": "0x8e4f2132730b891dd1dd9eeed43e0af2e3bc8970801cd396ffd086adb086d287"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-09T13:20:53.346Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}