const Web3 = require('web3');
const web3 = new Web3('http://localhost:8545' );
const TestPayABI=[{
    "constant": true,
    "inputs": [],
    "name": "ContractBalance1",
    "outputs": [{"internalType": "uint256","name": "","type": "uint256"}],
    "payable": false,
    "stateMutability": "view",
"type": "function"}
    ,{
        "constant": false,
        "inputs": [],
        "name": "PayToContract",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
"type": "function"}];
async function f() {      
    const TestPayaddress="0x1D78D7b3D2a0dF5Fc9691eca3969013dE2A57ef3"
	var acts=await web3.eth.getAccounts();
    const ContractTestPay   = new web3.eth.Contract(TestPayABI, TestPayaddress );
    var result = await ContractTestPay.methods.ContractBalance1().call();
    console.log(`ContractBalance shows ${Web3.utils.fromWei(result)} ether`);	
    var toTransfer=web3.utils.toWei("1" )
    var result = await ContractTestPay.methods.PayToContract().send({from: acts[0],value: toTransfer});
    console.log(`Stored in block ${result.blockNumber}`);
    var x=Web3.utils.fromWei(await web3.eth.getBalance(TestPayaddress),'ether');
    console.log(`TestPayaddress ${TestPayaddress} has ${x} ether`);
}
f();
